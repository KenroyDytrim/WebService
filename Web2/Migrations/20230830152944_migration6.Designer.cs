// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Web2.Data;

#nullable disable

namespace Web2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230830152944_migration6")]
    partial class migration6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Web2.Models.Analyzes", b =>
                {
                    b.Property<int>("id_analysis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_analysis"));

                    b.Property<double>("calcium_excretion")
                        .HasColumnType("double precision");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<int>("id_patient")
                        .HasColumnType("integer");

                    b.Property<double>("oxyproline_excretion")
                        .HasColumnType("double precision");

                    b.Property<double>("phosphorus_excretion")
                        .HasColumnType("double precision");

                    b.Property<double>("serum_calcium")
                        .HasColumnType("double precision");

                    b.Property<double>("serum_oxyproline")
                        .HasColumnType("double precision");

                    b.Property<double>("serum_phosphorus")
                        .HasColumnType("double precision");

                    b.Property<int>("severity_of_dst")
                        .HasColumnType("integer");

                    b.HasKey("id_analysis");

                    b.HasIndex("id_patient");

                    b.ToTable("analyzes");
                });

            modelBuilder.Entity("Web2.Models.Examination", b =>
                {
                    b.Property<int>("id_examination")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_examination"));

                    b.Property<bool>("change_in_the_contours_of_the_apophyses")
                        .HasColumnType("boolean");

                    b.Property<bool>("changing_the_contours_of_the_end_plates")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<bool>("decrease_in_the_height_of_the_intervertebral_disc")
                        .HasColumnType("boolean");

                    b.Property<bool>("enmg")
                        .HasColumnType("boolean");

                    b.Property<int>("id_patient")
                        .HasColumnType("integer");

                    b.Property<bool>("osteoporosis_of_the_vertebrae")
                        .HasColumnType("boolean");

                    b.Property<double>("posture_holding_time")
                        .HasColumnType("double precision");

                    b.Property<bool>("schmorl_hernia")
                        .HasColumnType("boolean");

                    b.Property<bool>("signs_of_osteochondrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("stabilographic_changes")
                        .HasColumnType("boolean");

                    b.Property<double>("the_amount_of_kyphosis_in_degress")
                        .HasColumnType("double precision");

                    b.Property<bool>("wedgeshaped_vertebral_bodies")
                        .HasColumnType("boolean");

                    b.HasKey("id_examination");

                    b.HasIndex("id_patient");

                    b.ToTable("examination");
                });

            modelBuilder.Entity("Web2.Models.Role", b =>
                {
                    b.Property<int>("idRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idRole"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idRole");

                    b.ToTable("role");
                });

            modelBuilder.Entity("Web2.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("idRole")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("idRole");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Web2.Models.patient_archive", b =>
                {
                    b.Property<int>("id_patient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_patient"));

                    b.Property<DateOnly>("birthday")
                        .HasColumnType("date");

                    b.Property<int>("id_group")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("patronymic")
                        .HasColumnType("text");

                    b.Property<string>("phone_num")
                        .HasColumnType("text");

                    b.Property<string>("surname")
                        .HasColumnType("text");

                    b.HasKey("id_patient");

                    b.HasIndex("id_group");

                    b.ToTable("patient_archive");
                });

            modelBuilder.Entity("Web2.Models.patient_group", b =>
                {
                    b.Property<int>("id_group")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_group"));

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("id_group");

                    b.ToTable("patient_groups");
                });

            modelBuilder.Entity("Web2.Models.Analyzes", b =>
                {
                    b.HasOne("Web2.Models.patient_archive", "patient_archive")
                        .WithMany()
                        .HasForeignKey("id_patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("patient_archive");
                });

            modelBuilder.Entity("Web2.Models.Examination", b =>
                {
                    b.HasOne("Web2.Models.patient_archive", "patient_archive")
                        .WithMany()
                        .HasForeignKey("id_patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("patient_archive");
                });

            modelBuilder.Entity("Web2.Models.User", b =>
                {
                    b.HasOne("Web2.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("idRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Web2.Models.patient_archive", b =>
                {
                    b.HasOne("Web2.Models.patient_group", "patient_group")
                        .WithMany()
                        .HasForeignKey("id_group")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("patient_group");
                });
#pragma warning restore 612, 618
        }
    }
}
