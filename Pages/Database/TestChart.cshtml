@page
@model Web2.Pages.Database.TestChartModel
@{
}

<head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
</head>

<body>

    <form method="post"></form>

    <div data-aos="fade-up-left">

        <div class="text-center">
            <h4 class="display-4">Количество патологий</h4>
            <div class="card">
                <div class="card-header" style="color:black;">Вертикальная гистограмма</div>
                <div class="chart-container">
                    <canvas id="bar-chart" width="100" height="300"></canvas>
                </div>
            </div>
        </div>

        <p>
            <div class="row">
                <div class="col-md-3">
                    <label class="form-label">Группа</label>
                    <select class="form-select" name="G1" id="G" asp-items="Model.GetGroup()">
                        <option value=""></option>
                    </select>
                </div>
            </div>
        </p>

        <div class="form-group">
            <input type="submit" style="margin: 5px 20px 5px 20px;" value="Выбрать" class="btn btn-primary" onclick="updateBar()" />
        </div>

    </div>


    @section scripts{

        <script src="~/scripts/Color.js"></script>

        <script>

            var Count = [];
            var Pathologies = [];

            @if (Model.GetData1().Count > 0)
            {
                foreach (var item in Model.GetData1())
                {
                    @:Count.push(@item.Count);
                    @:Pathologies.push('@item.Name');
                }
            }

                var Patholog = {
                label: "Patholog",
                data: Count,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 80, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(242, 124, 13, 0.2)',
                    'rgba(56, 204, 167, 0.2)',
                    'rgba(213, 240, 117, 0.2)',
                    'rgba(247, 135, 223, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 80, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(242, 124, 57, 1)',
                    'rgba(56, 204, 167, 1)',
                    'rgba(213, 240, 117, 1)',
                    'rgba(247, 135, 223, 1)'
                ],
                borderWidth: 1,
                lineTension: 0,
            };

            var datasetvalues = {
                labels: Pathologies, // x-azis label values
                datasets: [Patholog] // y-axis
            };

            barChartOptions = {
                indexAxis: 'x',
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        text: 'Легенда'
                    }
                },
                scales: {
                    x: {
                        barPercentage: 1,
                        categoryPercentage: 0.6,
                    },
                    y: {
                        barPercentage: 1,
                        categoryPercentage: 0.6,
                        ticks: {
                            beginAtZero: true
                        }
                    }
                }
            }

            var verticalBarChart = new Chart(
                document.getElementById('bar-chart').getContext('2d'), {
                type: 'bar',
                data: datasetvalues,
                options: barChartOptions
            });


        </script>

        <script>
            function updateBar() {
                var element = document.getElementById("G");

                var person = { "FirstName": "Andrew", "LastName": "Lock", "Age": 31 };
                $.ajax({
                    type: "POST",
                    url: "?handler=Abc",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: {G1: element.value},
                    headers: {
                        RequestVerificationToken:
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                })
                    .done(function (result) {
                        console.log(result);
                    });

                var buff = parseInt(element.value);

                                @if (Model.GetData1().Count > 0)
                                {
                                    foreach (var item in Model.GetData1())
                                    {
                                        @:Count.push(@item.Count);
                                        @:Pathologies.push('@item.Name');
                                    }
                                }

                            var Patholog = {
                            label: "Patholog",
                            data: Count,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 80, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(242, 124, 13, 0.2)',
                                'rgba(56, 204, 167, 0.2)',
                                'rgba(213, 240, 117, 0.2)',
                                'rgba(247, 135, 223, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 80, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(242, 124, 57, 1)',
                                'rgba(56, 204, 167, 1)',
                                'rgba(213, 240, 117, 1)',
                                'rgba(247, 135, 223, 1)'
                            ],
                            borderWidth: 1,
                            lineTension: 0,
                        };

                        var datasetvalues = {
                            labels: Pathologies, // x-azis label values
                            datasets: [Patholog] // y-axis
                        };

                        verticalBarChart.data = datasetvalues;
                        verticalBarChart.update();
            }
        </script>

        }
</body>
